# Configuration file

actuallyadditions {
    # Set the EMC for the item 'Coffee Beans'  [range: -1 ~ 2147483647, default: 64]
    I:emc_item_item.actuallyadditions.item_coffee_beans=64

    # Set the EMC for the item 'Rice'  [range: -1 ~ 2147483647, default: 64]
    I:emc_item_item.actuallyadditions.item_food_rice=64

    # Set the EMC for the item 'Bat's Wing'  [range: -1 ~ 2147483647, default: 480]
    I:emc_item_item.actuallyadditions.item_misc_bat_wing=480

    # Set the EMC for the item 'Canola'  [range: -1 ~ 2147483647, default: 64]
    I:emc_item_item.actuallyadditions.item_misc_canola=64

    # Set the EMC for the item 'Solidified Experience'  [range: -1 ~ 2147483647, default: 863]
    I:emc_item_item.actuallyadditions.item_solidified_experience=863

    # Enable mapper for crusher? [default: true]
    B:enable_crusher_mapper=true

    # Enable mapper for Empowerer? [default: true]
    B:enable_empowerer_mapper=true

    # Enable mapper for Reconstructor? [default: true]
    B:enable_reconstructor_mapper=true
}


appliedenergistics2 {
    # Adds condenser mapping for singularity and matter ball.
    # Uses cobblestone for conversion [default: true]
    B:enable_condenser_mapper=true

    # Adds seed growing and fluix crafting [default: true]
    B:enable_fluid_growing_mapper=true

    # Enable mapper for Grindstone? [default: true]
    B:enable_grindstone_mapper=true

    # Enable mapper for Inscriber? [default: true]
    B:enable_inscriber_mapper=true
}


chisel {
    # Enable mapper for Group('andesite')? [default: true]
    B:enable_group__andesite___mapper=true

    # Enable mapper for Group('antiblock')? [default: true]
    B:enable_group__antiblock___mapper=true

    # Enable mapper for Group('basalt')? [default: true]
    B:enable_group__basalt___mapper=true

    # Enable mapper for Group('block_coal_coke')? [default: true]
    B:enable_group__block_coal_coke___mapper=true

    # Enable mapper for Group('blockAluminum')? [default: true]
    B:enable_group__blockaluminum___mapper=true

    # Enable mapper for Group('blockBronze')? [default: true]
    B:enable_group__blockbronze___mapper=true

    # Enable mapper for Group('blockCharcoal')? [default: true]
    B:enable_group__blockcharcoal___mapper=true

    # Enable mapper for Group('blockCoal')? [default: true]
    B:enable_group__blockcoal___mapper=true

    # Enable mapper for Group('blockCoalCoke')? [default: true]
    B:enable_group__blockcoalcoke___mapper=true

    # Enable mapper for Group('blockCobalt')? [default: true]
    B:enable_group__blockcobalt___mapper=true

    # Enable mapper for Group('blockCopper')? [default: true]
    B:enable_group__blockcopper___mapper=true

    # Enable mapper for Group('blockDiamond')? [default: true]
    B:enable_group__blockdiamond___mapper=true

    # Enable mapper for Group('blockElectrum')? [default: true]
    B:enable_group__blockelectrum___mapper=true

    # Enable mapper for Group('blockEmerald')? [default: true]
    B:enable_group__blockemerald___mapper=true

    # Enable mapper for Group('blockGold')? [default: true]
    B:enable_group__blockgold___mapper=true

    # Enable mapper for Group('blockInvar')? [default: true]
    B:enable_group__blockinvar___mapper=true

    # Enable mapper for Group('blockIron')? [default: true]
    B:enable_group__blockiron___mapper=true

    # Enable mapper for Group('blockLapis')? [default: true]
    B:enable_group__blocklapis___mapper=true

    # Enable mapper for Group('blockLead')? [default: true]
    B:enable_group__blocklead___mapper=true

    # Enable mapper for Group('blockNickel')? [default: true]
    B:enable_group__blocknickel___mapper=true

    # Enable mapper for Group('blockPlatinum')? [default: true]
    B:enable_group__blockplatinum___mapper=true

    # Enable mapper for Group('blockSilver')? [default: true]
    B:enable_group__blocksilver___mapper=true

    # Enable mapper for Group('blockSteel')? [default: true]
    B:enable_group__blocksteel___mapper=true

    # Enable mapper for Group('blockTin')? [default: true]
    B:enable_group__blocktin___mapper=true

    # Enable mapper for Group('blockUranium')? [default: true]
    B:enable_group__blockuranium___mapper=true

    # Enable mapper for Group('bookshelf_acacia')? [default: true]
    B:enable_group__bookshelf_acacia___mapper=true

    # Enable mapper for Group('bookshelf_birch')? [default: true]
    B:enable_group__bookshelf_birch___mapper=true

    # Enable mapper for Group('bookshelf_darkoak')? [default: true]
    B:enable_group__bookshelf_darkoak___mapper=true

    # Enable mapper for Group('bookshelf_jungle')? [default: true]
    B:enable_group__bookshelf_jungle___mapper=true

    # Enable mapper for Group('bookshelf_oak')? [default: true]
    B:enable_group__bookshelf_oak___mapper=true

    # Enable mapper for Group('bookshelf_spruce')? [default: true]
    B:enable_group__bookshelf_spruce___mapper=true

    # Enable mapper for Group('bricks')? [default: true]
    B:enable_group__bricks___mapper=true

    # Enable mapper for Group('brownstone')? [default: true]
    B:enable_group__brownstone___mapper=true

    # Enable mapper for Group('brownstone_tconstruct')? [default: true]
    B:enable_group__brownstone_tconstruct___mapper=true

    # Enable mapper for Group('carpet_black')? [default: true]
    B:enable_group__carpet_black___mapper=true

    # Enable mapper for Group('carpet_blue')? [default: true]
    B:enable_group__carpet_blue___mapper=true

    # Enable mapper for Group('carpet_brown')? [default: true]
    B:enable_group__carpet_brown___mapper=true

    # Enable mapper for Group('carpet_cyan')? [default: true]
    B:enable_group__carpet_cyan___mapper=true

    # Enable mapper for Group('carpet_gray')? [default: true]
    B:enable_group__carpet_gray___mapper=true

    # Enable mapper for Group('carpet_green')? [default: true]
    B:enable_group__carpet_green___mapper=true

    # Enable mapper for Group('carpet_lightblue')? [default: true]
    B:enable_group__carpet_lightblue___mapper=true

    # Enable mapper for Group('carpet_lightgray')? [default: true]
    B:enable_group__carpet_lightgray___mapper=true

    # Enable mapper for Group('carpet_lime')? [default: true]
    B:enable_group__carpet_lime___mapper=true

    # Enable mapper for Group('carpet_magenta')? [default: true]
    B:enable_group__carpet_magenta___mapper=true

    # Enable mapper for Group('carpet_orange')? [default: true]
    B:enable_group__carpet_orange___mapper=true

    # Enable mapper for Group('carpet_pink')? [default: true]
    B:enable_group__carpet_pink___mapper=true

    # Enable mapper for Group('carpet_purple')? [default: true]
    B:enable_group__carpet_purple___mapper=true

    # Enable mapper for Group('carpet_red')? [default: true]
    B:enable_group__carpet_red___mapper=true

    # Enable mapper for Group('carpet_white')? [default: true]
    B:enable_group__carpet_white___mapper=true

    # Enable mapper for Group('carpet_yellow')? [default: true]
    B:enable_group__carpet_yellow___mapper=true

    # Enable mapper for Group('certus')? [default: true]
    B:enable_group__certus___mapper=true

    # Enable mapper for Group('cloud')? [default: true]
    B:enable_group__cloud___mapper=true

    # Enable mapper for Group('cobblestone')? [default: true]
    B:enable_group__cobblestone___mapper=true

    # Enable mapper for Group('cobblestonemossy')? [default: true]
    B:enable_group__cobblestonemossy___mapper=true

    # Enable mapper for Group('concrete_black')? [default: true]
    B:enable_group__concrete_black___mapper=true

    # Enable mapper for Group('concrete_blue')? [default: true]
    B:enable_group__concrete_blue___mapper=true

    # Enable mapper for Group('concrete_brown')? [default: true]
    B:enable_group__concrete_brown___mapper=true

    # Enable mapper for Group('concrete_cyan')? [default: true]
    B:enable_group__concrete_cyan___mapper=true

    # Enable mapper for Group('concrete_gray')? [default: true]
    B:enable_group__concrete_gray___mapper=true

    # Enable mapper for Group('concrete_green')? [default: true]
    B:enable_group__concrete_green___mapper=true

    # Enable mapper for Group('concrete_lightblue')? [default: true]
    B:enable_group__concrete_lightblue___mapper=true

    # Enable mapper for Group('concrete_lightgray')? [default: true]
    B:enable_group__concrete_lightgray___mapper=true

    # Enable mapper for Group('concrete_lime')? [default: true]
    B:enable_group__concrete_lime___mapper=true

    # Enable mapper for Group('concrete_magenta')? [default: true]
    B:enable_group__concrete_magenta___mapper=true

    # Enable mapper for Group('concrete_orange')? [default: true]
    B:enable_group__concrete_orange___mapper=true

    # Enable mapper for Group('concrete_pink')? [default: true]
    B:enable_group__concrete_pink___mapper=true

    # Enable mapper for Group('concrete_purple')? [default: true]
    B:enable_group__concrete_purple___mapper=true

    # Enable mapper for Group('concrete_red')? [default: true]
    B:enable_group__concrete_red___mapper=true

    # Enable mapper for Group('concrete_white')? [default: true]
    B:enable_group__concrete_white___mapper=true

    # Enable mapper for Group('concrete_yellow')? [default: true]
    B:enable_group__concrete_yellow___mapper=true

    # Enable mapper for Group('diorite')? [default: true]
    B:enable_group__diorite___mapper=true

    # Enable mapper for Group('dirt')? [default: true]
    B:enable_group__dirt___mapper=true

    # Enable mapper for Group('endstone')? [default: true]
    B:enable_group__endstone___mapper=true

    # Enable mapper for Group('factory')? [default: true]
    B:enable_group__factory___mapper=true

    # Enable mapper for Group('futura')? [default: true]
    B:enable_group__futura___mapper=true

    # Enable mapper for Group('glass')? [default: true]
    B:enable_group__glass___mapper=true

    # Enable mapper for Group('glassdyedblack')? [default: true]
    B:enable_group__glassdyedblack___mapper=true

    # Enable mapper for Group('glassdyedblue')? [default: true]
    B:enable_group__glassdyedblue___mapper=true

    # Enable mapper for Group('glassdyedbrown')? [default: true]
    B:enable_group__glassdyedbrown___mapper=true

    # Enable mapper for Group('glassdyedcyan')? [default: true]
    B:enable_group__glassdyedcyan___mapper=true

    # Enable mapper for Group('glassdyedgray')? [default: true]
    B:enable_group__glassdyedgray___mapper=true

    # Enable mapper for Group('glassdyedgreen')? [default: true]
    B:enable_group__glassdyedgreen___mapper=true

    # Enable mapper for Group('glassdyedlightblue')? [default: true]
    B:enable_group__glassdyedlightblue___mapper=true

    # Enable mapper for Group('glassdyedlightgray')? [default: true]
    B:enable_group__glassdyedlightgray___mapper=true

    # Enable mapper for Group('glassdyedlime')? [default: true]
    B:enable_group__glassdyedlime___mapper=true

    # Enable mapper for Group('glassdyedmagenta')? [default: true]
    B:enable_group__glassdyedmagenta___mapper=true

    # Enable mapper for Group('glassdyedorange')? [default: true]
    B:enable_group__glassdyedorange___mapper=true

    # Enable mapper for Group('glassdyedpink')? [default: true]
    B:enable_group__glassdyedpink___mapper=true

    # Enable mapper for Group('glassdyedpurple')? [default: true]
    B:enable_group__glassdyedpurple___mapper=true

    # Enable mapper for Group('glassdyedred')? [default: true]
    B:enable_group__glassdyedred___mapper=true

    # Enable mapper for Group('glassdyedwhite')? [default: true]
    B:enable_group__glassdyedwhite___mapper=true

    # Enable mapper for Group('glassdyedyellow')? [default: true]
    B:enable_group__glassdyedyellow___mapper=true

    # Enable mapper for Group('glasspane')? [default: true]
    B:enable_group__glasspane___mapper=true

    # Enable mapper for Group('glasspanedyedblack')? [default: true]
    B:enable_group__glasspanedyedblack___mapper=true

    # Enable mapper for Group('glasspanedyedblue')? [default: true]
    B:enable_group__glasspanedyedblue___mapper=true

    # Enable mapper for Group('glasspanedyedbrown')? [default: true]
    B:enable_group__glasspanedyedbrown___mapper=true

    # Enable mapper for Group('glasspanedyedcyan')? [default: true]
    B:enable_group__glasspanedyedcyan___mapper=true

    # Enable mapper for Group('glasspanedyedgray')? [default: true]
    B:enable_group__glasspanedyedgray___mapper=true

    # Enable mapper for Group('glasspanedyedgreen')? [default: true]
    B:enable_group__glasspanedyedgreen___mapper=true

    # Enable mapper for Group('glasspanedyedlightblue')? [default: true]
    B:enable_group__glasspanedyedlightblue___mapper=true

    # Enable mapper for Group('glasspanedyedlightgray')? [default: true]
    B:enable_group__glasspanedyedlightgray___mapper=true

    # Enable mapper for Group('glasspanedyedlime')? [default: true]
    B:enable_group__glasspanedyedlime___mapper=true

    # Enable mapper for Group('glasspanedyedmagenta')? [default: true]
    B:enable_group__glasspanedyedmagenta___mapper=true

    # Enable mapper for Group('glasspanedyedorange')? [default: true]
    B:enable_group__glasspanedyedorange___mapper=true

    # Enable mapper for Group('glasspanedyedpink')? [default: true]
    B:enable_group__glasspanedyedpink___mapper=true

    # Enable mapper for Group('glasspanedyedpurple')? [default: true]
    B:enable_group__glasspanedyedpurple___mapper=true

    # Enable mapper for Group('glasspanedyedred')? [default: true]
    B:enable_group__glasspanedyedred___mapper=true

    # Enable mapper for Group('glasspanedyedwhite')? [default: true]
    B:enable_group__glasspanedyedwhite___mapper=true

    # Enable mapper for Group('glasspanedyedyellow')? [default: true]
    B:enable_group__glasspanedyedyellow___mapper=true

    # Enable mapper for Group('glowstone')? [default: true]
    B:enable_group__glowstone___mapper=true

    # Enable mapper for Group('granite')? [default: true]
    B:enable_group__granite___mapper=true

    # Enable mapper for Group('hardenedclay')? [default: true]
    B:enable_group__hardenedclay___mapper=true

    # Enable mapper for Group('ice')? [default: true]
    B:enable_group__ice___mapper=true

    # Enable mapper for Group('ironpane')? [default: true]
    B:enable_group__ironpane___mapper=true

    # Enable mapper for Group('laboratory')? [default: true]
    B:enable_group__laboratory___mapper=true

    # Enable mapper for Group('lavastone')? [default: true]
    B:enable_group__lavastone___mapper=true

    # Enable mapper for Group('limestone')? [default: true]
    B:enable_group__limestone___mapper=true

    # Enable mapper for Group('marble')? [default: true]
    B:enable_group__marble___mapper=true

    # Enable mapper for Group('netherbrick')? [default: true]
    B:enable_group__netherbrick___mapper=true

    # Enable mapper for Group('netherrack')? [default: true]
    B:enable_group__netherrack___mapper=true

    # Enable mapper for Group('obsidian')? [default: true]
    B:enable_group__obsidian___mapper=true

    # Enable mapper for Group('paper')? [default: true]
    B:enable_group__paper___mapper=true

    # Enable mapper for Group('planks-acacia')? [default: true]
    B:enable_group__planks_acacia___mapper=true

    # Enable mapper for Group('planks-birch')? [default: true]
    B:enable_group__planks_birch___mapper=true

    # Enable mapper for Group('planks-dark-oak')? [default: true]
    B:enable_group__planks_dark_oak___mapper=true

    # Enable mapper for Group('planks-jungle')? [default: true]
    B:enable_group__planks_jungle___mapper=true

    # Enable mapper for Group('planks-oak')? [default: true]
    B:enable_group__planks_oak___mapper=true

    # Enable mapper for Group('planks-spruce')? [default: true]
    B:enable_group__planks_spruce___mapper=true

    # Enable mapper for Group('prismarine')? [default: true]
    B:enable_group__prismarine___mapper=true

    # Enable mapper for Group('purpur')? [default: true]
    B:enable_group__purpur___mapper=true

    # Enable mapper for Group('quartz')? [default: true]
    B:enable_group__quartz___mapper=true

    # Enable mapper for Group('redstone')? [default: true]
    B:enable_group__redstone___mapper=true

    # Enable mapper for Group('sandstonered')? [default: true]
    B:enable_group__sandstonered___mapper=true

    # Enable mapper for Group('sandstoneyellow')? [default: true]
    B:enable_group__sandstoneyellow___mapper=true

    # Enable mapper for Group('scorched_block')? [default: true]
    B:enable_group__scorched_block___mapper=true

    # Enable mapper for Group('seared_block')? [default: true]
    B:enable_group__seared_block___mapper=true

    # Enable mapper for Group('stonebrick')? [default: true]
    B:enable_group__stonebrick___mapper=true

    # Enable mapper for Group('temple')? [default: true]
    B:enable_group__temple___mapper=true

    # Enable mapper for Group('tyrian')? [default: true]
    B:enable_group__tyrian___mapper=true

    # Enable mapper for Group('valentines')? [default: true]
    B:enable_group__valentines___mapper=true

    # Enable mapper for Group('voidstone')? [default: true]
    B:enable_group__voidstone___mapper=true

    # Enable mapper for Group('waterstone')? [default: true]
    B:enable_group__waterstone___mapper=true

    # Enable mapper for Group('wool_black')? [default: true]
    B:enable_group__wool_black___mapper=true

    # Enable mapper for Group('wool_blue')? [default: true]
    B:enable_group__wool_blue___mapper=true

    # Enable mapper for Group('wool_brown')? [default: true]
    B:enable_group__wool_brown___mapper=true

    # Enable mapper for Group('wool_cyan')? [default: true]
    B:enable_group__wool_cyan___mapper=true

    # Enable mapper for Group('wool_gray')? [default: true]
    B:enable_group__wool_gray___mapper=true

    # Enable mapper for Group('wool_green')? [default: true]
    B:enable_group__wool_green___mapper=true

    # Enable mapper for Group('wool_lightblue')? [default: true]
    B:enable_group__wool_lightblue___mapper=true

    # Enable mapper for Group('wool_lightgray')? [default: true]
    B:enable_group__wool_lightgray___mapper=true

    # Enable mapper for Group('wool_lime')? [default: true]
    B:enable_group__wool_lime___mapper=true

    # Enable mapper for Group('wool_magenta')? [default: true]
    B:enable_group__wool_magenta___mapper=true

    # Enable mapper for Group('wool_orange')? [default: true]
    B:enable_group__wool_orange___mapper=true

    # Enable mapper for Group('wool_pink')? [default: true]
    B:enable_group__wool_pink___mapper=true

    # Enable mapper for Group('wool_purple')? [default: true]
    B:enable_group__wool_purple___mapper=true

    # Enable mapper for Group('wool_red')? [default: true]
    B:enable_group__wool_red___mapper=true

    # Enable mapper for Group('wool_white')? [default: true]
    B:enable_group__wool_white___mapper=true

    # Enable mapper for Group('wool_yellow')? [default: true]
    B:enable_group__wool_yellow___mapper=true
}


extrautils2 {
    # Enable mapper for extrautils2:crusher? [default: true]
    B:enable_extrautils2_crusher_mapper=true

    # Enable mapper for extrautils2:enchanter? [default: true]
    B:enable_extrautils2_enchanter_mapper=true

    # Enable mapper for Resonator? [default: true]
    B:enable_resonator_mapper=true
}


galacticraftcore {
    # Set the EMC for the item 'Raw Meteoric Iron'  [range: -1 ~ 2147483647, default: 512]
    I:emc_item_item.meteoric_iron_raw=512

    # Enable mapper for Circuit Fabricator? [default: true]
    B:enable_circuit_fabricator_mapper=true

    # Enable mapper for Compressor? [default: true]
    B:enable_compressor_mapper=true

    # Enable mapper for NASA Workbench ASTRO_MINER_BENCH? [default: true]
    B:enable_nasa_workbench_astro_miner_bench_mapper=true

    # Enable mapper for NASA Workbench BUGGY_BENCH? [default: true]
    B:enable_nasa_workbench_buggy_bench_mapper=true

    # Enable mapper for NASA Workbench CARGO_ROCKET_BENCH? [default: true]
    B:enable_nasa_workbench_cargo_rocket_bench_mapper=true

    # Enable mapper for NASA Workbench ROCKET_BENCH_T1? [default: true]
    B:enable_nasa_workbench_rocket_bench_t1_mapper=true

    # Enable mapper for NASA Workbench ROCKET_BENCH_T2? [default: true]
    B:enable_nasa_workbench_rocket_bench_t2_mapper=true

    # Enable mapper for NASA Workbench ROCKET_BENCH_T3? [default: true]
    B:enable_nasa_workbench_rocket_bench_t3_mapper=true
}


galacticraftplanets {
    # Set the EMC for the item 'Ilmenite Ore'  [range: -1 ~ 2147483647, default: 1024]
    I:emc_item_tile.asteroids_block.ore_ilmenite_asteroids=1024

    # Set the EMC for the item 'Dense Ice'  [range: -1 ~ 2147483647, default: 1]
    I:emc_item_tile.dense_ice=1

    # Set the EMC for the item 'Desh Ore'  [range: -1 ~ 2147483647, default: 256]
    I:emc_item_tile.mars.deshmars=256
}


general {
    # Enable debugging mode [default: false]
    B:debug=false

    # Disable the mod outright? Why download it though? [default: false]
    B:disable=false

    # Display message in chat about any failed plugins/mappers [default: true]
    B:error_check=true

    # Display message in chat about any updates [default: true]
    B:update_check=true
}


harvestcraft {
    # EMC Value for all items in oredict 'listAllberry' [range: -1 ~ 2147483647, default: 16]
    I:emc_ore_listAllberry=16

    # EMC Value for all items in oredict 'listAllfruit' [range: -1 ~ 2147483647, default: 128]
    I:emc_ore_listAllfruit=128

    # EMC Value for all items in oredict 'listAllgrain' [range: -1 ~ 2147483647, default: 24]
    I:emc_ore_listAllgrain=24

    # EMC Value for all items in oredict 'listAllgreenveggie' [range: -1 ~ 2147483647, default: 64]
    I:emc_ore_listAllgreenveggie=64

    # EMC Value for all items in oredict 'listAllmeatraw' [range: -1 ~ 2147483647, default: 64]
    I:emc_ore_listAllmeatraw=64

    # EMC Value for all items in oredict 'listAllnut' [range: -1 ~ 2147483647, default: 64]
    I:emc_ore_listAllnut=64

    # EMC Value for all items in oredict 'listAllseed' [range: -1 ~ 2147483647, default: 16]
    I:emc_ore_listAllseed=16

    # EMC Value for all items in oredict 'listAllveggie' [range: -1 ~ 2147483647, default: 64]
    I:emc_ore_listAllveggie=64

    # This may not work 100% of the time because of hacky methods used to fetch the recipes! [default: true]
    B:enable_grinder_mapper=true

    # Enable mapper for the market? [default: false]
    B:enable_market_mapper=false

    # This may not work 100% of the time because of hacky methods used to fetch the recipes! [default: true]
    B:enable_presser_mapper=true

    # This may not work 100% of the time because of hacky methods used to fetch the recipes! [default: true]
    B:enable_water_filter_mapper=true
}


mekanism {
    # Enable mapper for Chemical Infuser? [default: true]
    B:enable_chemical_infuser_mapper=true

    # Enable mapper for Chemical Oxidizer? [default: true]
    B:enable_chemical_oxidizer_mapper=true

    # Enable mapper for Chemical Washer? [default: true]
    B:enable_chemical_washer_mapper=true

    # Enable mapper for ChemicalInjectionChamber? [default: true]
    B:enable_chemicalinjectionchamber_mapper=true

    # Enable mapper for Combiner? [default: true]
    B:enable_combiner_mapper=true

    # Enable mapper for Crusher? [default: true]
    B:enable_crusher_mapper=true

    # Enable mapper for Crystallizer? [default: true]
    B:enable_crystallizer_mapper=true

    # Enable mapper for Dissolution? [default: true]
    B:enable_dissolution_mapper=true

    # Enable mapper for Electrolytic Separator? [default: true]
    B:enable_electrolytic_separator_mapper=true

    # Enable mapper for EnergizedSmelter? [default: true]
    B:enable_energizedsmelter_mapper=true

    # Enable mapper for EnrichmentChamber? [default: true]
    B:enable_enrichmentchamber_mapper=true

    # Enable mapper for Metallurgic Infuser? [default: true]
    B:enable_metallurgic_infuser_mapper=true

    # Enable mapper for OsmiumCompressor? [default: true]
    B:enable_osmiumcompressor_mapper=true

    # Enable mapper for PrecisionSawmill? [default: true]
    B:enable_precisionsawmill_mapper=true

    # Enable mapper for Pressurized Reaction Chamber? [default: true]
    B:enable_pressurized_reaction_chamber_mapper=true

    # Enable mapper for PurificationChamber? [default: true]
    B:enable_purificationchamber_mapper=true

    # Enable mapper for Rotary Condensentrator? [default: true]
    B:enable_rotary_condensentrator_mapper=true

    # Enable mapper for Solar Neutron Activator? [default: true]
    B:enable_solar_neutron_activator_mapper=true

    # Enable mapper for Thermal Evaporation? [default: true]
    B:enable_thermal_evaporation_mapper=true
}


mysticalagriculture {
    # Enable mapper for Seed Processor? [default: true]
    B:enable_seed_processor_mapper=true
}


plugins {

    mekanism {
        # Enable the plugin [default: true]
        B:enable=true
    }

    appliedenergistics2 {
        # Enable the plugin [default: true]
        B:enable=true
    }

    mysticalagriculture {
        # Enable the plugin [default: true]
        B:enable=true
    }

    tconstruct {
        # Enable the plugin [default: true]
        B:enable=true
    }

    extrautils2 {
        # Enable the plugin [default: true]
        B:enable=true
    }

    actuallyadditions {
        # Enable the plugin [default: true]
        B:enable=true
    }

    harvestcraft {
        # Enable the plugin [default: true]
        B:enable=true
    }

    galacticraftcore {
        # Enable the plugin [default: true]
        B:enable=true
    }

    securitycraft {
        # Enable the plugin [default: true]
        B:enable=true
    }

    chisel {
        # Enable the plugin [default: true]
        B:enable=true
    }

    galacticraftplanets {
        # Enable the plugin [default: true]
        B:enable=true
    }

}


securitycraft {
    # Enable mapper for reinforced blocks [default: true]
    B:enable_reinforce_mapper=true
}


tconstruct {
    # Tinkers Smelter Alloying recipe support [default: true]
    B:enable_alloy_mapper=true

    # Enable mapper for Basin? [default: true]
    B:enable_basin_mapper=true

    #  [default: true]
    B:enable_drying_mapper=true

    # Enable mapper for Melting? [default: true]
    B:enable_melting_mapper=true

    # Enable mapper for Table? [default: true]
    B:enable_table_mapper=true
}


